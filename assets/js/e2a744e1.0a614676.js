"use strict";(self.webpackChunkblog_waku_org=self.webpackChunkblog_waku_org||[]).push([[2143],{11965:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const i={layout:"post",name:"Improved rate limiting and stateless light clients in The Waku Network",title:"Improved rate limiting and stateless light clients in The Waku Network",date:new Date("2024-07-10T00:00:00.000Z"),authors:[],published:!0,slug:"rln-v2-stateless-light-clients",categories:"waku, progress",image:"/img/black-waku-logo-with-name.png"},o=void 0,s={permalink:"/rln-v2-stateless-light-clients",source:"@site/posts/2024-07-10-rln-v2-stateless-light-clients.mdx",title:"Improved rate limiting and stateless light clients in The Waku Network",description:"TLDR: We have just shipped two important features to The Waku Network that offer more granularity for RLN rate-limiting and add support for stateless light clients.",date:"2024-07-10T00:00:00.000Z",formattedDate:"July 10, 2024",tags:[],readingTime:6.635,hasTruncateMarker:!1,authors:[],frontMatter:{layout:"post",name:"Improved rate limiting and stateless light clients in The Waku Network",title:"Improved rate limiting and stateless light clients in The Waku Network",date:"2024-07-10T00:00:00.000Z",authors:[],published:!0,slug:"rln-v2-stateless-light-clients",categories:"waku, progress",image:"/img/black-waku-logo-with-name.png"},nextItem:{title:"Message Reliability",permalink:"/message-reliability"}},l={authorsImageUrls:[]},c=[{value:"Join The Waku Network",id:"join-the-waku-network",level:2},{value:"References:",id:"references",level:2}],h={toc:c};function p(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"TLDR"),": We have just shipped two important features to The Waku Network that offer more granularity for RLN rate-limiting and add support for stateless light clients.")),(0,r.kt)("h1",{id:"introduction-to-the-waku-network"},"Introduction to The Waku Network"),(0,r.kt)("p",null,"Waku launched The Waku Network last ",(0,r.kt)("a",{parentName:"p",href:"https://thedefiant.io/news/press-releases/waku-launches-first-decentralised-privacy-preserving-dos-protections-for-peer-to-peer-messaging"},"December 2023"),". A first-of-its-kind decentralized network focused on privacy and censorship resistance, running an opinionated instance of the Waku protocol with the following features:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Generalized messaging network, that allows point-to-point or broadcast communications, preserving the identity of the sender, not linking its messages to any identity or IP address."),(0,r.kt)("li",{parentName:"ul"},"A decentralized and permissionless network acting as a common infrastructure, not controlled by a single actor and open to anyone, both users and operators."),(0,r.kt)("li",{parentName:"ul"},"Rate-limited to ensure a fair usage of resources. It uses RLN (Rate Limiting Nullifiers) that leverage zero-knowledge cryptography to guarantee users adhere to a rate limit without compromising their privacy. Anyone can register in the smart contract, currently deployed in Sepolia testnet, by paying a small fee."),(0,r.kt)("li",{parentName:"ul"},"Support for light clients, defined as resource-restricted devices that interact with the protocol without participating in message routing."),(0,r.kt)("li",{parentName:"ul"},"Incentivized, both non-economic (reputation mechanism already implemented) and economic (crypto incentives currently under research).")),(0,r.kt)("p",null,"Over the last months, we detected a few limitations introduced by the usage of RLN for rate limiting, and we have been working hard to address them. As a result, we are proud to announce that the following new features are live in The Waku Network:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"We are excited to announce that last 3rd of July 2024, we introduced the following features, part of release ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/waku-org/nwaku/releases/tag/v0.30.1"},"v0.30.1"),"."),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Better rate-limiting:")," The previous rate-limiting mechanism (RLN-V1) only allowed to rate limit ",(0,r.kt)("inlineCode",{parentName:"li"},"1")," message every ",(0,r.kt)("inlineCode",{parentName:"li"},"y")," seconds. This wasn't practical and it's why we have just shipped RLN-V2, which allows nodes to rate limit ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," messages every ",(0,r.kt)("inlineCode",{parentName:"li"},"y")," seconds."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Stateless light clients:")," The main problem light clients had, was that they needed to sync and keep track of the Merkle tree that stored all memberships. This was slow and required both bandwidth and resources, a no-go for resource-restricted devices. After some changes in the smart contract, we now store the whole Merkle tree on it, which allows light clients to be stateless. The smart contract now provides all the required information. No need to sync. No need to keep state."))),(0,r.kt)("h1",{id:"better-rate-limiting"},"Better rate-limiting"),(0,r.kt)("p",null,"One of the main limitations of the previous rate-limiting mechanism (aka RLN-V1), was that it only allowed to rate limit ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," message every ",(0,r.kt)("inlineCode",{parentName:"p"},"y")," seconds. This wasn\u2019t practical since a low value would allow too many messages, and a high one would make the network unusable in practice."),(0,r.kt)("p",null,"Over the last months, we have been working hard in integrating ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/vacp2p/rfc-index/blob/a5b24ac0a27da361312260f9da372a0e6e812212/vac/raw/rln-v2.md"},"RLN-V2"),", which allows nodes to rate limit ",(0,r.kt)("inlineCode",{parentName:"p"},"x")," messages every ",(0,r.kt)("inlineCode",{parentName:"p"},"y")," seconds. This gives us extra granularity, making it more usable in practice."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The rate-limit ",(0,r.kt)("strong",{parentName:"p"},"was 1 message per second.")," Now with RLN-V2 The Waku Network allows more granularity, initially set to ",(0,r.kt)("strong",{parentName:"p"},"100 messages every 10 minutes")," for each member. There are plans to extend this to different \u201ctiers\u201d where each limit will have a different cost.")),(0,r.kt)("p",null,"But how does it work? There are two main components:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud83d\udddd\ufe0f+\ud83d\udd11: The RLN membership, which is made of a public (\ud83d\udd11) and private key (\ud83d\udddd\ufe0f), whose holder can use to \u201csign\u201d messages valid in the network. Anyone can register one in the smart contract."),(0,r.kt)("li",{parentName:"ul"},"\ud83d\udce7: The RLN proof and nullifier. It allows anyone to verify that a message is valid according to the rules. The nullifier acts as a stamp that is attached to each message and allows nodes to rate-limit the sender, while being privacy-preserving.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"rlnv2-stamps",src:a(61641).Z,width:"1662",height:"634"})),(0,r.kt)("p",null,"Each membership (\ud83d\udddd\ufe0f+\ud83d\udd11) is virtually given 100 stamps (\ud83d\udce7) every 10 minutes to spend on credits to send messages. Every sent message consumes a stamp. Nodes in the network count them and reject messages with none or repeated ones. And nodes are incentivised via reputation to not relay messages with invalid stamps."),(0,r.kt)("p",null,"This protects The Waku Network against Denial of Service attacks while preserving the privacy of the sender, since it doesn\u2019t reveal its membership, IP address or any other information to anyone."),(0,r.kt)("p",null,"The pricing mechanism is yet to be set. By now a user wanting to register a membership just has to pay just the transaction fees. There are plans to extend this to different \u201ctiers\u201d where each message limit will have a different cost. Note that the time window ",(0,r.kt)("inlineCode",{parentName:"p"},"y"),", also called epoch size, is a network parameter common to all nodes that can't be configured individually."),(0,r.kt)("h1",{id:"stateless-light-clients"},"Stateless light clients"),(0,r.kt)("p",null,"We define light-clients as the nodes that interact with The Waku Network to send or receive messages but don\u2019t participate in routing nor offer other capabilities such as storing historical messages. In other words, they are nodes running in resource-restricted devices interacting with the network but not contributing to it. Think of a client running on a phone or browser."),(0,r.kt)("p",null,"In order to send a message, the light client must attach a proof/stamp (\ud83d\udce7) to the message (\ud83d\udcac) as explained before. This stamp is in reality an RLN zero-knowledge proof to prove that its valid and respects the rate-limit."),(0,r.kt)("p",null,"Up until now, there was a lot of friction for light clients, since in order to get the stamp (\ud83d\udce7), they required the whole Merkle tree storing all memberships. Synchronizing this tree consumed resources: bandwidth, storage, and computation, which was a no-go for light clients."),(0,r.kt)("p",null,"However, we are proud to announce that now the Merkle tree is stored onchain. This removes the need for light clients to sync the tree. The contract provides all the required information. No need to sync. No need to keep state anymore."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The RLN membership Merkle tree is now stored in the smart contract, which allows light clients to be stateless. No need synchronize the Merkle Tree. The contract provides all required information via ",(0,r.kt)("inlineCode",{parentName:"p"},"merkleProofElements()")," (to generate proofs) and ",(0,r.kt)("inlineCode",{parentName:"p"},"root()")," (to verify them).")),(0,r.kt)("p",null,"Let's see an example. A membership is represented by two keys:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud83d\udd11: A public one, stored as a leaf in a Merkle tree"),(0,r.kt)("li",{parentName:"ul"},"\ud83d\udddd\ufe0f: A private one, that gives the right of the holder to publish valid messages.")),(0,r.kt)("p",null,"Now the smart contract provides both:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud83e\udeda: Merkle root of the tree containing all memberships \ud83d\udd11, accesible by ",(0,r.kt)("inlineCode",{parentName:"li"},"root()")),(0,r.kt)("li",{parentName:"ul"},"\ud83c\udf32: Merkle proof of a given membership \ud83d\udd11, accesible by ",(0,r.kt)("inlineCode",{parentName:"li"},"merkleProofElements(leaf)"))),(0,r.kt)("p",null,"Since root (\ud83e\udeda) and proofs (\ud83c\udf32) are now publicly available in the smart contract, light clients don\u2019t have to calculate these themselves. These allows seamless proof generation (for publishers) and verification (for subscribers):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud83d\udddd\ufe0f+\ud83c\udf32\xa0= \ud83d\udce7\xa0Using its private key (\ud83d\udddd\ufe0f) and the leaf Merkle proof (\ud83c\udf32) a publisher can generate the stamp (\ud83d\udce7) that is attached to the message (\ud83d\udcac)."),(0,r.kt)("li",{parentName:"ul"},"\ud83e\udeda+\ud83d\udce7\xa0= \u2705/\u274c\xa0The Merkle root (\ud83e\udeda) and the included stamp (\ud83d\udce7) of the message (\ud83d\udcac), can be used by the subscriber to verify if the message is legit to accept (\u2705) or reject (\u274c) it.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"rln-light",src:a(16676).Z,width:"2772",height:"1680"})),(0,r.kt)("p",null,"Note that both ",(0,r.kt)("inlineCode",{parentName:"p"},"merkleProofElements(leaf)")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"root()")," are free to call. They are ",(0,r.kt)("inlineCode",{parentName:"p"},"view")," functions that don\u2019t modify any state. Moreover, they don\u2019t consume much resources and should work in any RPC provider."),(0,r.kt)("p",null,"Note also that they are lazily evaluated, meaning that they are calculated on each call based on some intermediate stored leafs. This allows to save lots of gas. Insertions are expected to cost between 100k and 200k gas, hitting rarely more than that in ",(0,r.kt)("inlineCode",{parentName:"p"},"2^n")," leafs."),(0,r.kt)("p",null,"The contract is currently deployed in Ethereum Sepolia testnet, but its expected to move to a Layer 2 where gas would be even cheaper."),(0,r.kt)("h2",{id:"join-the-waku-network"},"Join The Waku Network"),(0,r.kt)("p",null,"Both of these features are live in The Waku Network, so if you want to test them out, join The Waku Network by using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/waku-org/nwaku-compose"},"nwaku-compose"),". As simple as cleaning up your previous configuration and running two commands."),(0,r.kt)("h2",{id:"references"},"References:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://rate-limiting-nullifier.github.io/rln-docs/"},"RLN Original spec")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://zkresear.ch/t/rate-limit-nullifier-v2-circuits/102"},"RLN-V2 Original post")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/vacp2p/rfc-index/blob/a5b24ac0a27da361312260f9da372a0e6e812212/vac/raw/rln-v2.md"},"RLN-V2 Waku spec")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/waku-org/nwaku/blob/8bfad3ab453f96ac545c7cb0af06d0c0f34d1356/waku/factory/networks_config.nim#L31"},"The Waku Network configuration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/privacy-scaling-explorations/zk-kit"},"LazyIMT Merkle Tree")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/privacy-scaling-explorations/zk-kit/pull/162"},"LazyIMT Merkle Tree modifications"))))}p.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>h,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},h=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,d=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return a?n.createElement(d,o(o({ref:t},h),{},{components:a})):n.createElement(d,o({ref:t},h))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},16676:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/rln-light-608211184ce3d6698c9a165c5f22145c.png"},61641:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/rlnv2-stamps-2ca940fb0728b41fb6709d29d4ecc7c0.png"}}]);