"use strict";(self.webpackChunkblog_waku_org=self.webpackChunkblog_waku_org||[]).push([[7884],{7044:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>h});var n=a(87462),r=(a(67294),a(3905));const i={layout:"post",name:"Deep Dive Into The Graph: Powered by Waku",title:"Deep Dive Into The Graph: Powered by Waku",date:new Date("2024-05-13T00:00:00.000Z"),authors:["guru"],published:!0,slug:"thegraph-waku-case-study",categories:"waku",image:"/img/thegraph.png",hide_table_of_contents:!1},o=void 0,s={permalink:"/thegraph-waku-case-study",source:"@site/posts/2024-05-13-the-graph-case-study.mdx",title:"Deep Dive Into The Graph: Powered by Waku",description:"Learn more about how The Graph uses Waku to build a decentralised data querying layer for blockchains",date:"2024-05-13T00:00:00.000Z",formattedDate:"May 13, 2024",tags:[],readingTime:6.14,hasTruncateMarker:!0,authors:[{name:"Guru",twitter:"@hackyguru",github:"hackyguru",key:"guru"}],frontMatter:{layout:"post",name:"Deep Dive Into The Graph: Powered by Waku",title:"Deep Dive Into The Graph: Powered by Waku",date:"2024-05-13T00:00:00.000Z",authors:["guru"],published:!0,slug:"thegraph-waku-case-study",categories:"waku",image:"/img/thegraph.png",hide_table_of_contents:!1},nextItem:{title:"April Progress Report",permalink:"/April-progress"}},l={authorsImageUrls:[void 0]},h=[{value:"Gateway to querying web3 data - The Graph",id:"gateway-to-querying-web3-data---the-graph",level:2},{value:"1. Data Indexing Segment:",id:"1-data-indexing-segment",level:3},{value:"2. Data Querying Segment:",id:"2-data-querying-segment",level:3},{value:"3. Network and Governance Segment:",id:"3-network-and-governance-segment",level:3},{value:"Proof of Indexing",id:"proof-of-indexing",level:2},{value:"Core developer teams in The Graph ecosystem",id:"core-developer-teams-in-the-graph-ecosystem",level:2},{value:"What is Graphcast?",id:"what-is-graphcast",level:2},{value:"How does The Graph use Waku?",id:"how-does-the-graph-use-waku",level:2},{value:"Waku as an infrastructure for decentralised indexing",id:"waku-as-an-infrastructure-for-decentralised-indexing",level:3},{value:"The Waku implementation used for Graphcast",id:"the-waku-implementation-used-for-graphcast",level:3},{value:"Subgraph versioning with Waku",id:"subgraph-versioning-with-waku",level:3},{value:"Closing words",id:"closing-words",level:2}],u={toc:h};function c(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Learn more about how The Graph uses Waku to build a decentralised data querying layer for blockchains"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"TheGraph Case Study",src:a(46754).Z,width:"1920",height:"1080"})),(0,r.kt)("p",null,"Indexing blockchain data can be challenging for projects with complex smart contracts. Managing and querying the vast data generated has become a significant challenge as the blockchain ecosystem proliferates."),(0,r.kt)("p",null,"The inherent properties of blockchain pose unique challenges when it comes to retrieving and querying data effectively. Some of the challenges include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Blockchain finality"),": refers to the irreversible acceptance of a transaction or block into the canonical chain, which can complicate the querying process. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Chain reorganisations")," refer to situations where the canonical chain is revised due to competing blocks. This block revision, in turn, introduces uncertainties that must be accounted for.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Uncled blocks")," refer to valid blocks not included in the canonical chain. These blocks complicate retrieving accurate and consistent query results from blockchain data. "))),(0,r.kt)("p",null,"These peculiarities of blockchain architecture make querying data time-consuming and conceptually complex, requiring specialised solutions to navigate seamlessly. "),(0,r.kt)("p",null,"What is our solution? The Graph. "),(0,r.kt)("h2",{id:"gateway-to-querying-web3-data---the-graph"},"Gateway to querying web3 data - The Graph"),(0,r.kt)("p",null,"The Graph aims to be the querying layer for blockchains. It intends to create a decentralised protocol for indexing and querying blockchain data. The Graph is similar to a middleware layer that indexes data from blockchains and storage networks, making it easily accessible and queryable without much hassle."),(0,r.kt)("p",null,"There are various segments within The Graph Protocol:"),(0,r.kt)("h3",{id:"1-data-indexing-segment"},"1. Data Indexing Segment:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Subgraphs:")," The open-source GraphQL schemas that define the data requirements and mapping rules."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Indexers:")," The nodes responsible for processing blockchain data based on the subgraph specifications and storing the indexed data in a queryable format."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Curators:")," The participants who signal the importance of specific subgraphs by staking tokens and incentivising indexers to prioritise indexing those subgraphs.")),(0,r.kt)("h3",{id:"2-data-querying-segment"},"2. Data Querying Segment:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Query Node:")," The stateless component that serves as the entry point for querying the indexed data routing GraphQL queries to the appropriate indexers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Graph Explorer:")," The graphical user interface allowing developers and users to explore and interact with the indexed data, execute GraphQL queries, and visualise the subgraph schemas.")),(0,r.kt)("h3",{id:"3-network-and-governance-segment"},"3. Network and Governance Segment:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"The Graph Network:")," The decentralised network of indexers, curators, and other participants contributing to indexing and querying blockchain data, operating on the Waku messaging protocol.")),(0,r.kt)("h2",{id:"proof-of-indexing"},"Proof of Indexing"),(0,r.kt)("p",null,"Proof of Indexing is a mechanism The Graph uses to ensure the integrity and reliability of the indexed data within its ecosystem. It is closely related to the core functionality of The Graph Protocol."),(0,r.kt)("p",null,"Proof of Indexing works by having indexers periodically submit a proof that they have correctly indexed the data specified by the assigned subgraphs. These proofs are cryptographic hashes that summarise the indexed data, allowing other nodes in the network to verify the correctness of the indexing process without having to re-index the entire data themselves."),(0,r.kt)("p",null,"The role of Proof of Indexing is twofold:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Data Integrity:")," By requiring indexers to submit proofs, The Graph ensures that the indexed data is accurate and consistent across the decentralised network of indexers. This helps maintain the reliability and trustworthiness of the indexed data, which is crucial for applications built on top of The Graph.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Indexer Accountability:")," Proof of Indexing holds indexers accountable for their work. Indexers who fail to submit valid proofs or are caught submitting incorrect proofs can face penalties, such as slashing their staked tokens or removal from the indexing pool. This incentivises indexers to perform their indexing duties honestly and accurately."))),(0,r.kt)("h2",{id:"core-developer-teams-in-the-graph-ecosystem"},"Core developer teams in The Graph ecosystem"),(0,r.kt)("p",null,"Multiple teams work on various focus areas within The Graph. ",(0,r.kt)("a",{parentName:"p",href:"https://graphops.xyz"},"GraphOps")," is one of the teams focusing on data indexing. GraphOps leverages Waku for a unique use case in ",(0,r.kt)("a",{parentName:"p",href:"https://thegraph.com/blog/subgraph-radio-information-exchange/"},"'subgraph radios'"),", which we will explain in detail."),(0,r.kt)("p",null,"Subgraph radios are a feature introduced by Graphcast that allows real-time streaming of data updates and events from The Graph's indexed subgraphs. They bridge The Graph's indexed data and Graphcast's event processing framework, making subgraph radios a key component of Graphcast's real-time data streaming and event processing capabilities."),(0,r.kt)("h2",{id:"what-is-graphcast"},"What is Graphcast?"),(0,r.kt)("p",null,"The Graph is a decentralised indexing layer that does not rely on centralised communications. Graphcast was introduced to provide uncompromised communications in The Graph's indexing solution. "),(0,r.kt)("p",null,"Before the GraphOps team introduced Graphcast, the majority of the indexing solutions used three ways to communicate:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"1. Onchain communications:")," Expensive and inefficient regarding scalability as the users need to pay gas for every state change."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"2. Old-fashioned group chat:")," It is highly dependent on Web2 communications, which have a single point of failure and higher security risks."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"3. Automated bots:")," Several indexer bots running on centralised servers to automate communication on event signalling."),(0,r.kt)("p",null,"All three solutions listed above could have been more efficient. Hence, we wanted a more robust and decentralised communications infrastructure to fix several issues. The core contributors of GraphOps mention that Waku is an obvious choice for solving this problem. Continue reading to learn more about how Graphcast uses Waku."),(0,r.kt)("h2",{id:"how-does-the-graph-use-waku"},"How does The Graph use Waku?"),(0,r.kt)("p",null,"Waku is one of the foundational technologies used to build Graphcast, a domain-specific gossip network for indexers."),(0,r.kt)("h3",{id:"waku-as-an-infrastructure-for-decentralised-indexing"},"Waku as an infrastructure for decentralised indexing"),(0,r.kt)("p",null,"To maintain the decentralised nature of its infrastructure, The Graph leverages ",(0,r.kt)("a",{parentName:"p",href:"https://waku.org"},"Waku"),", a family of decentralised Web3 communications protocols, for communication between its indexers. Indexers are responsible for processing blockchain data and creating queryable subgraphs."),(0,r.kt)("p",null,"Waku enables indexers to communicate and sync data peer-to-peer, eliminating the need for centralised servers or intermediaries. This approach aligns with the decentralisation principles and censorship resistance underpinning Web3."),(0,r.kt)("p",null,"By utilising Waku, The Graph ensures that its indexing infrastructure remains decentralised, resilient, and resistant to single points of failure. This not only enhances the security and reliability of The Graph's services but also upholds the core values of Web3, fostering a truly decentralised ecosystem for data indexing and querying."),(0,r.kt)("h3",{id:"the-waku-implementation-used-for-graphcast"},"The Waku implementation used for Graphcast"),(0,r.kt)("p",null,"Waku provides ",(0,r.kt)("a",{parentName:"p",href:"https://docs.waku.org/"},"several implementations")," that apply to various use cases based on resource availability. Graphcast uses Waku's Rust bindings. In Graphcast's Waku integration, all downstream radios act as Waku relay nodes. Graphcast uses its unique pubsub topic. The GraphOps team also operates their own ",(0,r.kt)("inlineCode",{parentName:"p"},"nwaku")," fleet in addition to the already-existing Waku nodes that support Graphcast's pubsub topic."),(0,r.kt)("h3",{id:"subgraph-versioning-with-waku"},"Subgraph versioning with Waku"),(0,r.kt)("p",null,"GraphOps core contributors also mentioned they face difficulties with subgraph versioning. These difficulties revolve around syncing the subgraph data based on the correct versions."),(0,r.kt)("p",null,"The core contributors are also interested in exploring ",(0,r.kt)("inlineCode",{parentName:"p"},"js-waku"),"- a light node implementation of Waku - to create a web interface that allows sending messages to the Graphcast network to sync the subgraph data based on the correct versions. "),(0,r.kt)("p",null,"This is another fantastic use case that Waku provides to Graphcast, providing private, robust, and reliable communication."),(0,r.kt)("h2",{id:"closing-words"},"Closing words"),(0,r.kt)("p",null,"The Graph is one of the most widely used projects in the Web3 space. Waku's unique use case of decentralising their indexers with a peer-to-peer network is one of a kind, and only a limited number of Web3 infrastructure projects implement such a high degree of decentralisation in their indexers. ",(0,r.kt)("a",{parentName:"p",href:"https://thegraph.com"},"TheGraph")," has introduced a novel use case to the space, and the Waku team is happy to help other projects decentralise their communications infrastructure."),(0,r.kt)("p",null,"Join our ",(0,r.kt)("a",{parentName:"p",href:"https://discord.waku.org"},"Discord community"),", and our core contributors will be happy to assist you in getting started with Waku."))}c.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),h=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=h(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=h(a),d=r,g=p["".concat(l,".").concat(d)]||p[d]||c[d]||i;return a?n.createElement(g,o(o({ref:t},u),{},{components:a})):n.createElement(g,o({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var h=2;h<i;h++)o[h]=a[h];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},46754:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/thegraph-18e105fa475509a1df068c049b530a78.png"}}]);