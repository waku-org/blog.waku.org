<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://waku.org/</id>
    <title>Waku Blog</title>
    <updated>2023-12-20T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://waku.org/"/>
    <subtitle>Waku Blog</subtitle>
    <icon>https://waku.org/theme/image/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Key Learnings from Waku Hackers in 2023]]></title>
        <id>https://waku.org/learnings-from-hackers</id>
        <link href="https://waku.org/learnings-from-hackers"/>
        <updated>2023-12-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A review of the key learnings from Waku hackathon participants this year and what we are doing to improve developers' experience.]]></summary>
        <content type="html"><![CDATA[<p>A review of the key learnings from Waku hackathon participants this year and what we are doing to improve developers' experience. </p><hr><p>2023 has been an incredible year for Waku. We attended eight events across four continents, participated in three ETHGlobal hackathons, and hosted the first Waku Hacker House. It has been amazing to see the growth of the developer community on Waku, and we want to make sure that next year it will be even easier to onboard new hackers and developers.</p><p>We recently held an X Space where we invited the winning projects from the ETHRome hackathon to tell us what they like about Waku, what worked well while using Waku, and where they saw areas for improvement. Below, you will find some of the key insights from the hackers and learn how their feedback is informing improvements around Waku documentation and the greater developer experience. </p><p><a href="https://twitter.com/vpavlin" target="_blank" rel="noopener noreferrer">Václav</a>, <a href="https://twitter.com/vrycmfy" target="_blank" rel="noopener noreferrer">Aaron</a>, and <a href="https://twitter.com/hackyguru" target="_blank" rel="noopener noreferrer">Guru</a> represented the Waku team on the Space. We were also joined by participants from the winning ETHRome teams <a href="https://twitter.com/Feka_7heaven" target="_blank" rel="noopener noreferrer">Feka</a>, <a href="https://twitter.com/mrnmrceth" target="_blank" rel="noopener noreferrer">mrnmrc.eth</a>, <a href="https://twitter.com/martinlecl" target="_blank" rel="noopener noreferrer">Martin</a>, <a href="https://twitter.com/Rgis295478" target="_blank" rel="noopener noreferrer">Régis</a>, <a href="https://twitter.com/floriantruchot" target="_blank" rel="noopener noreferrer">Florian</a>, and <a href="https://twitter.com/Mattia" target="_blank" rel="noopener noreferrer">Mattia</a>.  </p><blockquote class="twitter-tweet"><p lang="zxx" dir="ltr"><a href="https://t.co/3hJv115Sg2" target="_blank" rel="noopener noreferrer">https://t.co/3hJv115Sg2</a></p>— Waku (@Waku_org) <a href="https://twitter.com/Waku_org/status/1722659158816612463?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">November 9, 2023</a></blockquote> <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="blockchain-seems-like-the-default-way-to-do-decentralised-things-but-in-the-end-its-not-the-only-one---mattia">“Blockchain seems like the default way to do decentralised things, but in the end, it's not the only one” - Mattia<a href="#blockchain-seems-like-the-default-way-to-do-decentralised-things-but-in-the-end-its-not-the-only-one---mattia" class="hash-link" aria-label="Direct link to “Blockchain seems like the default way to do decentralised things, but in the end, it's not the only one” - Mattia" title="Direct link to “Blockchain seems like the default way to do decentralised things, but in the end, it's not the only one” - Mattia">​</a></h2><p>By not executing transactions on a blockchain, Waku protocols benefit from decentralisation and speed without requiring gas fee payments. </p><p>Mattia praised the seamless interoperability enabled by Waku’s platform-agnostic nature, allowing his team and all the hackers at the event to use the protocols on any platform or blockchain without restrictions. He noted that this helps to eliminate silos between chains, which is a key issue in web3. We believe this platform-agnostic characteristic will help Waku become the standard for communication in web3. </p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="top-tip-for-hackers-what-we-mean-when-we-say-no-more-chat-apps">Top tip for hackers: What we mean when we say “no more chat apps”<a href="#top-tip-for-hackers-what-we-mean-when-we-say-no-more-chat-apps" class="hash-link" aria-label="Direct link to Top tip for hackers: What we mean when we say “no more chat apps”" title="Direct link to Top tip for hackers: What we mean when we say “no more chat apps”">​</a></h2><p>As you may have noticed, during Waku’s recent hackathon, we requested that participants not submit ‘standard chat apps’. If you are wondering why, many of these are already in the ecosystem and we want to encourage hackers to find new use cases that can add value to users. Building a chat protocol with the proper security parameters to protect its users during a hackathon is also highly challenging. Chat apps refer to person-to-person messaging apps, such as Telegram. But much of the functionality within Waku revolves around chat-like interactions. As Guru and Václav noted, in essence, Waku activities are akin to a chat interface, albeit one that transcends traditional UI constraints. Even sophisticated applications, such as that submitted by Mattia's team, are interactions between Waku nodes, where the data could range from simple text to more complex data like GPS locations.</p><p>Whether it is interactions between humans or machines, the core principle remains a form of chat. Within the Waku ecosystem, users essentially engage in a dialogue, either issuing commands to nodes for execution or communicating with AI services, which then carry out tasks based on predefined transactions. Hackers require creativity to transform these interactions into something truly exciting. </p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="issues-with-waku-documentation-and-what-we-are-doing-about-it">Issues with Waku documentation and what we are doing about it<a href="#issues-with-waku-documentation-and-what-we-are-doing-about-it" class="hash-link" aria-label="Direct link to Issues with Waku documentation and what we are doing about it" title="Direct link to Issues with Waku documentation and what we are doing about it">​</a></h2><p>Matija shared that his team had difficulties when it came to implementing encryption, and they had to resort to using asymmetric encryption. They created a public-private key pair and exchanged it between the users. This is not always convenient, especially if there is a group of people involved. It presents a challenge to Waku’s bandwidth constraints to ensure everyone has all of the relevant public keys and then to re-encrypt them. </p><p>A protocol in Waku called Noise solves this by negotiating a symmetric key pair between users. Multiple teams shared feedback that it was either not easy to locate the correct resources or that it was not easy to use. While we currently have <a href="https://rfc.vac.dev/spec/35/" target="_blank" rel="noopener noreferrer">developer specification</a> documents for Noise on the Vac research site, based on the hackers' feedback, we have created more accessible guides around encryption, which will be live very soon on the <a href="https://docs.waku.org/" target="_blank" rel="noopener noreferrer">Waku Docs</a> site. We will be following this with better Noise protocol guides soon. </p><p>Federico noted that he and his team found it overwhelming to use Waku for the first time due to its extensive components that did not align with their project requirements. However, they commended the well-written nature of the documentation that provided a solid foundation for their work. In particular, he attested to the quality of the ‘<a href="https://docs.waku.org/" target="_blank" rel="noopener noreferrer">getting started</a>’ example. However, he suggested that for hackathon projects, a more streamlined and beginner-friendly example would be beneficial. Additionally, Frederico recommended incorporating examples with popular frameworks like React, as it aligns with the prevalent usage of frameworks in building applications.</p><p>Václav acknowledged the limited nature of the current documentation and examples; it is a symptom of Waku’s relative youth and constant evolution. Václav encouraged community participation by highlighting the existence of the <a href="https://github.com/waku-org/bounties/" target="_blank" rel="noopener noreferrer">bounties repository</a>, where contributors can propose and work on examples aligned with specific frameworks or use cases. This collaborative approach aims to address gaps in documentation and make Waku more accessible to a broader audience.</p><p>We are happy to share that since the X Space happened, we have released a <a href="https://docs.waku.org/guides/js-waku/use-waku-react/" target="_blank" rel="noopener noreferrer">Waku React package</a> based on Federico's feedback that provides components and UI adapters to integrate @waku/sdk into React applications effortlessly.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="we-are-improving-connection-issues-by-better-node-incentivisation">We are improving connection issues by better node incentivisation<a href="#we-are-improving-connection-issues-by-better-node-incentivisation" class="hash-link" aria-label="Direct link to We are improving connection issues by better node incentivisation" title="Direct link to We are improving connection issues by better node incentivisation">​</a></h2><p>Martin and Florian shared that their team experienced network connection issues several times during the hackathon, noting that the network was likely overloaded due to the significant number of hackathon participants. Aaron shared his appreciation for the feedback: “We must be brutally honest if we are going to fix the things that aren't easy to work with.” </p><p>Running nodes that fully participate in the Waku Relay Network should be encouraged, and <a href="https://blog.waku.org/waku-roadmap" target="_blank" rel="noopener noreferrer">we have been doing so in this Q</a> by optimising the software and making participation permissionless. With such innovations, the community can benefit from more neutral contributions to the network, hence the backbone of a secure, scalable network, and a more extensive set of nodes to get sender and recipient k-anonymity.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="you-called-for-storage-and-it-is-coming">You called for storage… and it is coming!<a href="#you-called-for-storage-and-it-is-coming" class="hash-link" aria-label="Direct link to You called for storage… and it is coming!" title="Direct link to You called for storage… and it is coming!">​</a></h2><p>The hackers mentioned that using Waku alone without any additional decentralised storage solution limits what they can build during a hackathon's time-constrained period. As Václav noted: “Waku is in general ephemeral, and it should not be used, and it cannot be used for long-term storage.”</p><p>Until now, hackers have relied on alternatives such as IPFS and Arweave when they need a decentralised storage element for their projects. However, both options rely on some form of centralised gateways to access external data.</p><p>The good news is <a href="https://codex.storage/" target="_blank" rel="noopener noreferrer">Codex</a> is currently in development and will be able to step in and fill the gap. As the storage layer of the <a href="/logos.co">Logos</a> technology stack, Codex is durable and decentralised. Codex implements protocol constructs that incentivise wide participation of data storage providers, both small and large, thus ensuring a robust network resistant to censorship and external attack. An end-to-end solution with good integration between Waku and Codex will give developers precisely what they need from communications and storage.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="were-on-the-precipice-of-something-that-weve-all-been-waiting-for-aaron">“We're on the precipice of something that we've all been waiting for” Aaron<a href="#were-on-the-precipice-of-something-that-weve-all-been-waiting-for-aaron" class="hash-link" aria-label="Direct link to “We're on the precipice of something that we've all been waiting for” Aaron" title="Direct link to “We're on the precipice of something that we've all been waiting for” Aaron">​</a></h2><p>Aaron took a moment in the Space to remind the community how close Waku is to realising one of the original promises of the Ethereum ecosystem - a decentralised peer-to-peer communications protocol. </p><p>“With Waku, we're on the precipice of something we've all been waiting for. We cannot lose sight of the tech that props up this entire ecosystem… In the Ethereum whitepaper, Whisper was outlined as the peer-to-peer communication protocol for the network. Due to one reason or another, Whisper's development did not progress in the same way other areas did. Waku boldly is picking up that torch and going forward. And with so many different world events happening, both positive and otherwise, Waku aims to be a tool for all people and machines to be leveraged.”</p><p>Please ensure you follow <a href="https://twitter.com/Waku_org" target="_blank" rel="noopener noreferrer">Waku on X</a> to get updates on the upcoming X Space, scheduled for February. The teams behind the best projects from ETHIstanbul and ETHIndia will join us. </p><p>We will be participating in more major hackathons next year, which we hope to see you at, but in the meantime, why not check out our <a href="https://github.com/waku-org/bounties/issues" target="_blank" rel="noopener noreferrer">open bounties</a>? You are welcome and encouraged to share your feedback with us anytime on <a href="https://discord.com/invite/gMPAzmcDER" target="_blank" rel="noopener noreferrer">Discord</a>.</p>]]></content>
        <author>
            <name>Amelia Trapp</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Waku Roadmap]]></title>
        <id>https://waku.org/waku-roadmap</id>
        <link href="https://waku.org/waku-roadmap"/>
        <updated>2023-11-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A comprehensive review of the Waku roadmap for H2 2023]]></summary>
        <content type="html"><![CDATA[<p>A comprehensive review of the Waku roadmap for H2 2023</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="background-on-waku">Background on Waku<a href="#background-on-waku" class="hash-link" aria-label="Direct link to Background on Waku" title="Direct link to Background on Waku">​</a></h2><p>To understand why Waku exists, you need only to consider the centralised internet. Technology giants can dictate what we see and with whom we can communicate. The centralised platforms we regularly use to communicate have privileged access to outlandish realms of personal data that powerful commercial and political institutions can leverage. In contrast, <a href="https://waku.org/" target="_blank" rel="noopener noreferrer">Waku</a> empowers internet users to circumvent these actions, offering a decentralised, open-source suite of privacy-preserving, peer-to-peer messaging protocols. The protocols are designed to flourish in resource-restricted environments to be accessible to people across the globe and can run on phones, servers, or browsers. Waku can be used for general messaging with humans, machines, or a hybrid situation.</p><p>We apply <a href="https://hackmd.io/@vac/main/%2FYYlZYBCURFyO_ZG1EiteWg#11WAKU2-RELAY-gossipsub" target="_blank" rel="noopener noreferrer">Waku Relay</a> on top of the gossip protocol <a href="https://docs.libp2p.io/concepts/pubsub/overview/" target="_blank" rel="noopener noreferrer">GossipSub</a> from libp2p to route messages and information with a subset of connected peers, increasing security and privacy. A gossip protocol is a peer-to-peer protocol in which nodes periodically exchange information about themselves and other associated nodes. Currently, it is possible to use the Waku Network and join a public gossipsub network in a permissionless manner. Some projects using Waku that opt to do this include <a href="https://status.app/" target="_blank" rel="noopener noreferrer">Status Desktop and Mobile</a>, <a href="https://docs.railgun.org/wiki/learn/privacy-system/community-relayers" target="_blank" rel="noopener noreferrer">Railgun</a>, and <a href="https://docs.graphops.xyz/graphcast/design-principles" target="_blank" rel="noopener noreferrer">TheGraph</a>.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="achievements-in-h1-2023">Achievements in H1 2023<a href="#achievements-in-h1-2023" class="hash-link" aria-label="Direct link to Achievements in H1 2023" title="Direct link to Achievements in H1 2023">​</a></h2><p>One of the critical limitations of Waku is its reliance on a single GossipSub network for all users, which necessitates that each user relay traffic for all applications. As the adoption of Waku continues to grow, the bandwidth consumption skyrockets. Users with limited bandwidth capabilities are marginalised and unable to participate fully in the Waku Relay network. The key focus of the Waku development team in the first half of this year was to resolve some of these limitations around scaling to support the Status app’s goal of serving one million users.</p><p>We met our milestone of providing a Waku network that can scale to approximately ten thousand active users within a <a href="https://status.app/" target="_blank" rel="noopener noreferrer">Status Community</a>, primarily thanks to implementing static sharding. Instead of having one relay network, we split the Waku Network into several relay (gossipsub) networks so that the end user is not required to relay the traffic of all applications, but rather just the traffic on the same shard. <a href="https://blog.waku.org/scaling-waku-progress-update/" target="_blank" rel="noopener noreferrer">We have also developed opt-in message signing</a> as another stopgap solution to match the Status app timeline and needs. The Community signs the messages with a single key belonging to the entire Community, presenting a more private solution than having individual signatures. This solution set, in addition to protocol and software improvements, should enable the Status team to launch the Status apps with reasonable bandwidth usage.</p><p>The manual coordination of shard assignment with static sharding requires the actions of a central entity. While it is still permissionless, and anyone could run a node on any shard, the lack of coordination would deteriorate the user experience. Being able to scale Waku to support one million users on the Status app is dependent on our ability to improve on our H1 deliveries, which we will be stress testing and running through simulations.</p><p>The Waku team also deployed basic protections. The Denial of Service (DoS) protections are very light and do not give any guarantees regarding bandwidth usage. Users running a node, such as Status Desktop, will not want it to hog their bandwidth. What was delivered in H1 has caveats in terms of permissionless and relative DOS protection. It is possible to build an application with either properties, but not both. You will find our approach to resolving this in the H2 roadmap below.</p><p>You can read more about all of the deliveries in H1 <a href="https://blog.waku.org/scaling-waku-progress-update/" target="_blank" rel="noopener noreferrer">here.</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="roadmap-milestones-in-h2-2023">Roadmap milestones in H2 2023<a href="#roadmap-milestones-in-h2-2023" class="hash-link" aria-label="Direct link to Roadmap milestones in H2 2023" title="Direct link to Roadmap milestones in H2 2023">​</a></h2><p>Waku’s core milestone for H2 is launching and bootstrapping Waku Network Gen 0. There are an additional two milestones for 2024 that we have begun working on; those are:</p><ul><li><a href="https://github.com/waku-org/pm/milestone/2" target="_blank" rel="noopener noreferrer">Add support for multiple platforms</a><span style="text-decoration:underline">:</span></li></ul><p>We will be researching and experimenting with nim in 2023 to lay the groundwork for supporting multiple platforms.</p><ul><li><a href="https://github.com/waku-org/pm/milestone/3" target="_blank" rel="noopener noreferrer">Instate quality assurance processes</a><span style="text-decoration:underline">;</span></li></ul><p>This workstream has been initiated this year.</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="waku-network-gen-0">Waku Network Gen 0<a href="#waku-network-gen-0" class="hash-link" aria-label="Direct link to Waku Network Gen 0" title="Direct link to Waku Network Gen 0">​</a></h4><p>The <a href="https://hackmd.io/6Q_bHochRMOvTRXN0vCr5A?both#Waku-Network-Gen-0" target="_blank" rel="noopener noreferrer">Waku Network Gen 0</a> builds on H1 2023’s network sharding innovations and uses rate limiting from work done in 2021 and 2022. The goal is to create one permissionless, auto-scalable, DoS protected public network. The auto-sharding protocol automatically allocates messages for an application and does not require a centralised, manual allocator.</p><p>Through rate limiting, we will be working to ensure that users (or attackers) cannot flood the network beyond the maximum expected bandwidth usage. We will protect abuse through our RLN DoS protection, capping publishers to 1 message per second. We are also working on a dimensioning mechanism that would give publishers a maximum allocation of messages per day, limiting the maximum size of these messages within the overall network. Individuals can join a group on-chain and prove their membership in each message in a zero-knowledge manner – that is, without revealing which member they are. The number of members in the group is likely to be capped initially to guarantee maximum bandwidth usage by the network, although we will be able to review those when launching subsequent versions.</p><p>Running nodes that fully participate in the Waku Relay Network should be encouraged. We aim to do so by optimising the software and making participation permissionless. With such innovations, the community can benefit from more neutral contributions to the network, hence the backbone of a secure, scalable network, and a more extensive set of nodes to get sender and recipient <a href="https://vac.dev/rlog/wakuv2-relay-anon?" target="_blank" rel="noopener noreferrer">k-anonymity</a>.</p><p>It’s important to note that all current and future issues need to be solved while preserving our principles:</p><ul><li>Private</li><li>Modular</li><li>Scalable</li><li>Censorship resistant</li><li>Portable: works on mobile and browser</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="development-roadmap-tracks">Development Roadmap tracks<a href="#development-roadmap-tracks" class="hash-link" aria-label="Direct link to Development Roadmap tracks" title="Direct link to Development Roadmap tracks">​</a></h3><p>We have organised our research and development work into three tracks:</p><p>General Track;</p><p>Service Protocols;</p><p>DoS protection.</p><p>We will review each track in more detail below.</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="general-track">General Track<a href="#general-track" class="hash-link" aria-label="Direct link to General Track" title="Direct link to General Track">​</a></h4><p>The foundational work focuses on creating a scalable and auto-sharded Waku Network. Here, we determine specifications, design, and implement strategies based on our research and development that aid in scaling the Waku Network.</p><p>You can view the latest progress from the General Track <a href="https://github.com/orgs/waku-org/projects/2/views/2?filterQuery=E%3A+1.+" target="_blank" rel="noopener noreferrer">here</a>. Below are the key milestones and associated tasks from this track.</p><ul><li><strong><a href="https://github.com/waku-org/research/issues/6" target="_blank" rel="noopener noreferrer">1.1: Network requirements and design</a></strong><ul><li>Goal: 22 Sep 2023</li><li>Key Activities:<ul><li>Determine network specifications and design.</li></ul></li></ul></li><li><strong><a href="https://github.com/waku-org/pm/issues/65" target="_blank" rel="noopener noreferrer">1.2: Auto-sharding for autoscaling</a></strong><ul><li>Goal: 30 Sep 2023</li><li>Key Activities:<ul><li>Design and implement auto-sharding strategy.</li><li>Launch a limited number of shards.</li></ul></li></ul></li><li><strong><a href="https://github.com/waku-org/pm/issues/66" target="_blank" rel="noopener noreferrer">1.3: Node bandwidth management mechanism</a></strong><ul><li>Goal: 31 Oct 2023</li><li>Key Activities:<ul><li>Implement bandwidth management to choose shards based on availability for relay nodes dynamically</li><li>Design predictable bandwidth limits per shard</li></ul></li></ul></li><li><strong><a href="https://github.com/waku-org/pm/issues/67" target="_blank" rel="noopener noreferrer">1.4: Peer management and discovery</a></strong><ul><li>Goal: 30 Nov 2023</li><li>Key Activities:<ul><li>Design transparent interaction between applications and shards</li><li>Peer management system to track and discover public shared peers</li></ul></li></ul></li><li><strong><a href="https://github.com/waku-org/research/issues/1" target="_blank" rel="noopener noreferrer">1.5: Launch and dogfood integrated public Waku Network MVP</a></strong><ul><li>Goal: 31 Jan 2024</li><li>Key Activities:<ul><li>Launch Waku Network MVP</li><li>Gather feedback and improve</li></ul></li></ul></li></ul><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="service-protocols"><strong>Service Protocols</strong><a href="#service-protocols" class="hash-link" aria-label="Direct link to service-protocols" title="Direct link to service-protocols">​</a></h4><p>Our focus within <a href="https://docs.waku.org/overview/concepts/protocols" target="_blank" rel="noopener noreferrer">Service Protocols</a> is required to upkeep and expand protocols such as filter, lightpush, peer exchange and store within the public network in a decentralised manner. Work within this track also involves ongoing efforts to incentivise our network.</p><p>You can view the latest progress from the Service Protocols Track <a href="https://github.com/orgs/waku-org/projects/2/views/2?filterQuery=E%3A+2.+" target="_blank" rel="noopener noreferrer">here</a>. Below are the key milestones and associated tasks from this track.</p><ul><li><strong><a href="https://github.com/waku-org/pm/issues/49" target="_blank" rel="noopener noreferrer">2.1: Production testing of existing protocols</a></strong><ul><li>Goal: 30 Nov 2023</li><li>Key Activities:<ul><li>Test and improve current service protocols: <a href="https://rfc.vac.dev/spec/12/" target="_blank" rel="noopener noreferrer">filter</a>, <a href="https://rfc.vac.dev/spec/19/" target="_blank" rel="noopener noreferrer">lightpush</a>, and <a href="https://rfc.vac.dev/spec/34/" target="_blank" rel="noopener noreferrer">peer-exchange</a>.</li></ul></li></ul></li><li><strong><a href="https://github.com/waku-org/pm/issues/63" target="_blank" rel="noopener noreferrer">2.2: Sharded capability discovery for light protocols</a></strong><ul><li>Goal: 30 Sep 2023</li><li>Key Activities:<ul><li>Peer selection mechanism that translates content topics to their underlying shard</li></ul></li></ul></li><li><strong><a href="https://github.com/waku-org/pm/issues/64" target="_blank" rel="noopener noreferrer">2.3: Basic distributed store services</a></strong><ul><li>Goal: 30 Nov 2023 (integrate in 2024)</li><li>Key Activities:<ul><li>Discover Store nodes for specific content topics and time ranges.</li><li>Service nodes to advertise their store services</li></ul></li></ul></li><li><strong><a href="https://github.com/waku-org/pm/issues/80" target="_blank" rel="noopener noreferrer">2.4: Basic design for service incentivisation</a></strong><ul><li>Goal: 31 Dec 2023</li><li>Key Activities:<ul><li>Incentivize service provision of the Waku Network</li><li>Tokenomics implementation</li></ul></li></ul></li></ul><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dos-protection"><strong>DoS Protection</strong><a href="#dos-protection" class="hash-link" aria-label="Direct link to dos-protection" title="Direct link to dos-protection">​</a></h4><p>Denial of Service (DoS) mitigation is a challenge within any network. Bandwidth is a scarce resource for the Waku network; DoS protection is about stopping an attacker from flooding the network or for a Waku node to hog all of a user’s bandwidth. This track covers consensus mechanisms such as our rate-limiting designs.</p><p>We balance free traffic with a fairly incentivised structure that doesn’t exhaust the overall bandwidth. We must implement measures to ensure the bandwidth usage is feasible for additional protocol-wide DOS protection. We need to assist node operators in maximising the use of their resources and allocate shard support depending on current traffic so that we can assure ongoing service guarantees.</p><p>You can view the latest progress from the DoS Protection Track <a href="https://github.com/orgs/waku-org/projects/2/views/2?filterQuery=E%3A+3.+" target="_blank" rel="noopener noreferrer">here</a>. Below are the key milestones and associated tasks from this track.</p><ul><li><strong><a href="https://github.com/waku-org/pm/issues/69" target="_blank" rel="noopener noreferrer">3.1: DoS requirements and design</a></strong><ul><li>Goal: 22 Sep 2023</li><li>Key Activities:<ul><li>Define DoS/spam protection specifications</li><li>Design initial membership mechanisms</li><li><a href="https://hackmd.io/@alrevuelta/rkqbPKaoo" target="_blank" rel="noopener noreferrer">Free and or paid traffic design</a></li></ul></li></ul></li><li><strong><a href="https://github.com/waku-org/pm/issues/70" target="_blank" rel="noopener noreferrer">3.2: Basic DoS protection in production</a></strong><ul><li>Goal: 31 Oct 2023</li><li>Key Activities:<ul><li>Implement and launch the RLN mechanism</li><li>Implement rate limiting</li></ul></li></ul></li><li><strong><a href="https://github.com/waku-org/pm/issues/71" target="_blank" rel="noopener noreferrer">3.3: Membership for Status Communities</a></strong><ul><li>Goal: 30 Nov 2023</li><li>Key Activities:<ul><li>Design membership assignments for community members</li></ul></li></ul></li><li><strong><a href="https://github.com/waku-org/pm/issues/72" target="_blank" rel="noopener noreferrer">3.4: Further memberships</a></strong><ul><li>Goal: 31 Dec 2023</li><li>Key Activities:<ul><li>Expanding memberships to third parties</li></ul></li></ul></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="anticipated-risks-to-delivering-our-h2-milestones">Anticipated risks to delivering our H2 milestones<a href="#anticipated-risks-to-delivering-our-h2-milestones" class="hash-link" aria-label="Direct link to Anticipated risks to delivering our H2 milestones" title="Direct link to Anticipated risks to delivering our H2 milestones">​</a></h3><p>We have identified several challenges that may impact our ability to deliver on our roadmap milestones.</p><p><strong>1. Ongoing structural design changes due to practical implications:</strong></p><p>Our network dimensioning on modelling and assumptions may need to be modified when applied in real-world use cases. For example, we have designed the network not to allow more than one message published per second by each publisher. We have set message sizes to a maximum of 150 KB, implemented a 20-second grace period, and divided all traffic among 8 defined network shards. The risk is that, despite our modelling and research, the structural changes might not be helpful for all applications.</p><p>We are committed to building in the open and accept that our <a href="https://github.com/waku-org/pm/blob/master/README.md" target="_blank" rel="noopener noreferrer">project management process</a> could be better. This principle of openness is why we are dedicating effort to producing easily digestible content, such as our documentation at <a href="https://docs.waku.org/" target="_blank" rel="noopener noreferrer">docs.waku.org</a>.</p><p><strong>2. Interactions between applications and nodes:</strong></p><p>Waku Relay is the foundation for building decentralised communications. There is uncertainty on how applications will interact with the underlying nodes to ensure that all app traffic gets routed seamlessly and transparently, all while having a balanced data load throughout eight different routing shards.</p><p><strong>3. Navigating Bandwidth Management</strong></p><p>Bandwidth in peer-to-peer networks is a luxury that needs to be acutely observed and managed. To maintain a large group of peers hosting nodes, we must be capable of securely managing bandwidth allocation to their nodes.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="become-a-part-of-the-waku-ecosystem">Become a part of the Waku ecosystem<a href="#become-a-part-of-the-waku-ecosystem" class="hash-link" aria-label="Direct link to Become a part of the Waku ecosystem" title="Direct link to Become a part of the Waku ecosystem">​</a></h3><p>If you have questions about Waku’s development roadmap or want to join a like-minded community focused on bringing peer-to-peer communications to millions of users, join the Waku <a href="https://discord.waku.org/" target="_blank" rel="noopener noreferrer">Discord</a> or follow us on <a href="https://twitter.com/Waku_org" target="_blank" rel="noopener noreferrer">X</a>.</p><p>If the technology speaks to you, <a href="https://https://status.app/jobs/" target="_blank" rel="noopener noreferrer">check out our open job positions</a> or crack some of our <a href="https://github.org/waku-org/bounties" target="_blank" rel="noopener noreferrer">bounties</a>.</p><p>You can also help to ensure that we stay decentralised by <a href="https://docs.waku.org/guides/nwaku/run-node" target="_blank" rel="noopener noreferrer">running your own Waku Node!</a></p><p>To integrate Waku into your application, check the table below for the necessary links. You can always get further support from us on Discord.</p><table><tbody><tr><td></td><td><strong>Integrate Waku into your application</strong></td></tr><tr><td>docs</td><td><a href="https://docs.waku.org/" target="_blank" rel="noopener noreferrer">https://docs.waku.org</a></td></tr><tr><td>nwaku</td><td><a href="https://github.com/waku-org/nwaku" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/nwaku</a></td></tr><tr><td>browser (JS/TS)</td><td><a href="https://github.com/waku-org/js-waku" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/js-waku</a></td></tr><tr><td>Go</td><td><a href="https://github.com/waku-org/go-waku" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/go-waku</a></td></tr><tr><td>Rust</td><td><a href="https://github.com/waku-org/waku-rust-bindings" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/waku-rust-bindings</a></td></tr></tbody></table><p>We look forward to connecting and hearing your feedback on our roadmap.</p>]]></content>
        <author>
            <name>Amelia Trapp</name>
        </author>
        <author>
            <name>mf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Scaling Waku: A Progress Update]]></title>
        <id>https://waku.org/scaling-waku-progress-update</id>
        <link href="https://waku.org/scaling-waku-progress-update"/>
        <updated>2023-09-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A glance into how Waku has progressed its scaling capabilities throughout 2023]]></summary>
        <content type="html"><![CDATA[<p>A glance into how Waku has progressed its scaling capabilities throughout 2023</p><p>As we move forward into the last months 2023, our primary goal has been to solidify the scalability of Waku protocols, focusing on Status Communities.</p><p>We have <a href="https://github.com/waku-org/pm/issues/12" target="_blank" rel="noopener noreferrer">set and reached</a> our milestone of providing a Waku network that can scale to approximately 10K <em>active</em> users in Status Communities. While continuing to provide <a href="https://status.im" target="_blank" rel="noopener noreferrer">Status</a> the required network services to make such a community viable, we believe that the research, protocols, tools, and solutions we are working on will allow the overall Waku network to scale to over a million nodes.</p><p>To meet Status's timeline for the Communities feature, the Waku team made some tough decisions that required tradeoffs in terms of decentralization and other design goals. However, this approach has allowed us to demonstrate the core stability and scalability of Waku's protocols, while continuously working towards long-term solutions that provide better anonymity, robustness, and decentralization features.</p><p>This article will continue diving deeper into what we did and where you can learn more about these topics. If you're already keen to get your hands dirty, we have recently published our upgraded <a href="https://docs.waku.org" target="_blank" rel="noopener noreferrer">Waku documentation</a>, allowing us to build faster, <a href="https://docs.waku.org/community/" target="_blank" rel="noopener noreferrer">together</a>.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="overview">Overview<a href="#overview" class="hash-link" aria-label="Direct link to Overview" title="Direct link to Overview">​</a></h2><ul><li><p><a href="#laying-the-theoretical-groundwork"> <strong>Theoretical: Laying the groundwork</strong></a></p><ul><li>Theoretical Analysis of Scaling Gossipsub.</li><li>Static Sharding</li></ul></li><li><p><a href="#bridging-theory-to-practice"><strong>Bridging theory to practice</strong></a></p><ul><li>Simulations</li><li>Status Telemetry Analysis</li></ul></li><li><p><a href="#hands-on-achievements"><strong>Hands-on achievements</strong></a></p><ul><li>Status MVP Delivery (Scaled Waku Communities to 10k)</li><li>Protocol Service Improvements<ul><li>PostgreSQL transition</li><li>Waku Peer Exchange</li><li>Filter Protocol Redesign</li></ul></li><li>Status DoS mitigation mechanism</li><li>Building for builders<ul><li>Waku Docs upgrade</li><li>C API</li></ul></li></ul></li><li><p><a href="#contribute-to-the-decentralisation-of-communication"><strong>Contribute to the decentralisation of communication</strong></a></p></li></ul><hr><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="laying-the-theoretical-groundwork">Laying the theoretical groundwork<a href="#laying-the-theoretical-groundwork" class="hash-link" aria-label="Direct link to Laying the theoretical groundwork" title="Direct link to Laying the theoretical groundwork">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="theoretical-analysis-of-scaling-gossipsub">Theoretical Analysis of Scaling gossipsub<a href="#theoretical-analysis-of-scaling-gossipsub" class="hash-link" aria-label="Direct link to Theoretical Analysis of Scaling gossipsub" title="Direct link to Theoretical Analysis of Scaling gossipsub">​</a></h3><p>We started in Q1 by doing a <a href="https://hackmd.io/IYmyyUIdSEuRZ7WbYd6dng?view" target="_blank" rel="noopener noreferrer">theoretical analysis (mathematical modelling)</a> of GossipSub scaling under certain conditions.</p><p>The numbers for our message rates and sizes chosen for the model come from the telemetric analysis of typical traffic on significantly sizable Discord servers and existing Status Communities. From this, we conclude that the Waku Relay network can scale to 10,000 nodes per shard.</p><p>Suppose we further assume that each Status Community operates on a separate shard. In that case, each community can scale to 10,000 <em>active</em> relay-only users while bandwidth usage remains within a reasonable range for each user.</p><p>Realistically most community nodes are not active simultaneously, so this approach could scale to ~100,000 nodes per community if roughly 1/10th of users are active at any time.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-sharding">Static sharding<a href="#static-sharding" class="hash-link" aria-label="Direct link to Static sharding" title="Direct link to Static sharding">​</a></h3><p>Based on the analyses above, we published <a href="https://rfc.vac.dev/spec/57/" target="_blank" rel="noopener noreferrer">an RFC</a>, bringing together an integrated strategy to scale Status Communities based on static sharding. This requires manually selecting and configuring static shard(s) per community, with no sharing of shards between communities. Static sharding provides a simple way to achieve scalability with reasonable Denial of Service (DoS) protection (more on that below) but also requires some trade-offs in decentralisation and anonymity. Therefore, our longer-term strategy is to provide a way to auto-scale the Waku network with "autosharding" - this allows multiple applications and communities to share the same set of shards without intervening manually in the underlying message routing strategies.</p><p><a href="https://github.com/waku-org/research/issues/3" target="_blank" rel="noopener noreferrer">This Github issue</a> provides more information on our network strategy as we advance. In the near future you can expect an elaborated post on our strategy &amp; roadmap.</p><hr><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bridging-theory-to-practice">Bridging theory to practice<a href="#bridging-theory-to-practice" class="hash-link" aria-label="Direct link to Bridging theory to practice" title="Direct link to Bridging theory to practice">​</a></h2><hr><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="simulations">Simulations<a href="#simulations" class="hash-link" aria-label="Direct link to Simulations" title="Direct link to Simulations">​</a></h3><p>To test our theoretical conclusions, the Distributed Systems Testing (DST) team ran extensive simulations using a Waku simulation tool built on the Kurtosis framework, <a href="https://github.com/vacp2p/wakurtosis" target="_blank" rel="noopener noreferrer">Wakurtosis</a>.</p><p>The DST team has recently published a <a href="https://docs.google.com/document/d/1U3bzlbk_Z3ZxN9tPAnORfYdPRWyskMuShXbdxCj4xOM/edit" target="_blank" rel="noopener noreferrer">summary report</a> detailing these conclusions about scalability, matching our theoretical expectations while showing that the nwaku client can deal with the resource overhead in a growing network.</p><p>While achieving full-scale simulations of 10,000 nodes posed challenges, initial simulations of up to 1000 nodes aligned with our mathematical models. This gave us confidence in the viability of our approach.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="status-telemetry-analysis">Status telemetry analysis<a href="#status-telemetry-analysis" class="hash-link" aria-label="Direct link to Status telemetry analysis" title="Direct link to Status telemetry analysis">​</a></h3><p>Having drawn theoretical conclusions under which a Waku Relay network would scale, we then experimented to verify our conclusions. Afterwards we performed a <a href="https://github.com/vacp2p/vac-book/blob/main/scratch/status-scaling/status-telemetry-analysis.md" target="_blank" rel="noopener noreferrer">telemetric analysis</a> of current Status Community traffic.</p><p>This allowed us to discover potential bottlenecks when sending large messages over Waku, determine major bandwith usage, and propose strategies to help Status Communities reasonably use Waku without compromising its scalability.</p><hr><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="hands-on-achievements">Hands-on achievements<a href="#hands-on-achievements" class="hash-link" aria-label="Direct link to Hands-on achievements" title="Direct link to Hands-on achievements">​</a></h2><hr><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="protocol-service-improvements">Protocol service improvements<a href="#protocol-service-improvements" class="hash-link" aria-label="Direct link to Protocol service improvements" title="Direct link to Protocol service improvements">​</a></h3><p>To cater to the needs of a growing network of users on diverse platforms, the team improved (and in some cases wholly redesigned) our existing protocols based on the lessons we have learned from dogfooding the Waku network. Of these, the changes to the store and filter protocols were the most significant.</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="--postgresql-transition">- PostgreSQL transition<a href="#--postgresql-transition" class="hash-link" aria-label="Direct link to - PostgreSQL transition" title="Direct link to - PostgreSQL transition">​</a></h4><p> To be able to retrieve an increasing amount of large history queries &amp; messages from our store protocol, we have <a href="https://github.com/waku-org/pm/issues/4" target="_blank" rel="noopener noreferrer">transitioned</a> from a simple SQLite backend to a more robust PostgreSQL archive. This allows store nodes to serve multiple queries in parallel while improving message reliability through redundancy.</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="--filter-protocol-redesign">- Filter protocol redesign<a href="#--filter-protocol-redesign" class="hash-link" aria-label="Direct link to - Filter protocol redesign" title="Direct link to - Filter protocol redesign">​</a></h4><p>The filter protocol allows resource-restricted devices to receive only a subset of messages routed in the network. We have redesigned <a href="https://rfc.vac.dev/spec/12/" target="_blank" rel="noopener noreferrer">the entire filter protocol</a> to be more robust and provide features requested by Waku-based applications, such as refreshing existing subscriptions.</p><p>This new filter protocol version is currently being dogfooded within both mobile and desktop production environment, and the initial feedback is prominently positive.</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="--waku-peer-exchange">- <strong>Waku peer exchange</strong><a href="#--waku-peer-exchange" class="hash-link" aria-label="Direct link to --waku-peer-exchange" title="Direct link to --waku-peer-exchange">​</a></h4><p> We have designed and then created a discovery mechanism suitable for resource-restricted nodes called <a href="https://rfc.vac.dev/spec/34/" target="_blank" rel="noopener noreferrer">Waku peer exchange</a>. Work on all these protocols empowers nodes, including resource-restricted devices, to participate seamlessly, ensuring that the network remains accessible to all.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="connectivity-discovering-and-managing-peers">Connectivity: discovering and managing peers<a href="#connectivity-discovering-and-managing-peers" class="hash-link" aria-label="Direct link to Connectivity: discovering and managing peers" title="Direct link to Connectivity: discovering and managing peers">​</a></h3><p>A Waku network can only function well if we make it efficient for nodes to connect and interact.</p><p>During the first half of 2023, we spent significant effort improving how a node discovers peers and manages its connectivity to those peers. We have boosted a node's ability to differentiate between "good" and "bad" connections, including integrating <a href="https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md#peer-scoring" target="_blank" rel="noopener noreferrer">gossipsub peer scoring</a>.</p><p>Thanks to the introduction of <a href="https://rfc.vac.dev/spec/57/#libp2p-rendezvous-and-circuit-relay" target="_blank" rel="noopener noreferrer">libp2p rendezvous discovery</a>, nodes behind restrictive NATs can now make themselves discoverable and connect to other nodes by coordinating a NAT hole punch via a <a href="https://rfc.vac.dev/spec/57/#libp2p-rendezvous-and-circuit-relay" target="_blank" rel="noopener noreferrer">circuit-relay connection</a>.</p><p>We have also modified <a href="https://rfc.vac.dev/spec/51/#discovery" target="_blank" rel="noopener noreferrer">discovery</a> methods such as <a href="https://github.com/ethereum/devp2p/blob/master/discv5/discv5.md" target="_blank" rel="noopener noreferrer">discv5</a>, to consider static sharding when filtering discovered nodes.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dos-protection">DoS protection<a href="#dos-protection" class="hash-link" aria-label="Direct link to DoS protection" title="Direct link to DoS protection">​</a></h3><p>One of the most important considerations of any Waku network deployment is protecting the network against spam and DOS attacks. While we are still working on productising a <a href="https://rfc.vac.dev/spec/17/" target="_blank" rel="noopener noreferrer">privacy-preserving spam protection mechanism based on rate-limiting nullifiers</a>, we focused in H1 on developing a simple DoS mitigation mechanism for Status Communities.</p><p>This requires all messages belonging to a community to be signed with a key distributed to all community members. Since static sharding ensures messages are only routed within a community, each relayer in the Waku network can validate that each routed message truly originated from within the community and discard those that did not.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="building-for-builders">Building for builders<a href="#building-for-builders" class="hash-link" aria-label="Direct link to Building for builders" title="Direct link to Building for builders">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="--docs">- Docs<a href="#--docs" class="hash-link" aria-label="Direct link to - Docs" title="Direct link to - Docs">​</a></h4><p>We are continuing to make building on Waku more accessible than ever. We have redesigned and improved our <a href="https://docs.waku.org/" target="_blank" rel="noopener noreferrer">docs website</a>, making it easier for you to get acquainted with our work.</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="--c-api">- C API<a href="#--c-api" class="hash-link" aria-label="Direct link to - C API" title="Direct link to - C API">​</a></h4><p>The nwaku client has recently seen the introduction of <a href="https://github.com/waku-org/nwaku/tree/b9d5d28af5afcc2589357a132c9b5beb57202828/examples/cbindings" target="_blank" rel="noopener noreferrer">a C API</a> that can be seamlessly wrapped in multiple programming languages (see the <a href="https://github.com/waku-org/nwaku/tree/b9d5d28af5afcc2589357a132c9b5beb57202828/examples/python" target="_blank" rel="noopener noreferrer">Python wrapper</a> as an example), an efficient <a href="https://docs.waku.org/guides/nodes-and-sdks/" target="_blank" rel="noopener noreferrer">addition</a> to our existing languages and frameworks support. By simplifying the process of integrating nwaku as a service node into other applications, we are fostering an environment where more projects can actively build on Waku and contribute to the Waku network.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="setting-the-stage-for-growth">Setting the stage for growth<a href="#setting-the-stage-for-growth" class="hash-link" aria-label="Direct link to Setting the stage for growth" title="Direct link to Setting the stage for growth">​</a></h2><p>This post provides a glimpse into the Waku Team's progress in the first half of 2023.</p><p>Our sights are currently set on taking what we have learned and building a <a href="https://github.com/waku-org/research/issues/1" target="_blank" rel="noopener noreferrer">viable public Waku Network</a> that can scale to even larger numbers while maintaining our core <a href="https://status.im/about/#our-principles" target="_blank" rel="noopener noreferrer">principles</a> of open-access, privacy-preservation, decentralisation, and transparency about trade-offs.</p><p>Conquering those research &amp; development challenges will not only scale Waku, but will play a significant role in growing and scaling Status Communities. Where we now have made certain trade-offs, our end-goal and principles are aligned in our end-goals, you'll soon read more about our goals and milestones in our upcoming Roadmap.</p><p>As a team, we remain dedicated to this mandate while acknowledging the vast involvement of community members and collaborators who contribute to our journey.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="contribute-to-the-decentralisation-of-communication"><strong>Contribute to the decentralisation of communication.</strong><a href="#contribute-to-the-decentralisation-of-communication" class="hash-link" aria-label="Direct link to contribute-to-the-decentralisation-of-communication" title="Direct link to contribute-to-the-decentralisation-of-communication">​</a></h2><p>Help us ensure that we are staying decentralised by <a href="https://docs.waku.org/guides/run-nwaku-node" target="_blank" rel="noopener noreferrer">running your own Waku Node!</a></p><table><thead><tr><th></th><th>Integrate Waku in your application</th></tr></thead><tbody><tr><td>nwaku</td><td><a href="https://github.com/waku-org/nwaku" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/nwaku</a></td></tr><tr><td>Browser (JS/TS)</td><td><a href="https://github.com/waku-org/js-waku" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/js-waku</a></td></tr><tr><td>Go</td><td><a href="https://github.com/waku-org/go-waku" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/go-waku</a></td></tr><tr><td>Rust</td><td><a href="https://github.com/waku-org/waku-rust-bindings" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/waku-rust-bindings</a></td></tr><tr><td>More…</td><td><a href="https://docs.waku.org/guides/nodes-and-sdks" target="_blank" rel="noopener noreferrer">https://docs.waku.org/guides/nodes-and-sdks</a></td></tr></tbody></table><p>Soon we will also release our upcoming roadmap.</p><p>Stay tuned, and follow our <a href="https://twitter.com/Waku_org" target="_blank" rel="noopener noreferrer">Twitter</a> to keep yourself updated on new launches. Say hello to us on <a href="https://discord.gg/GdJJh38sZR" target="_blank" rel="noopener noreferrer">Discord</a>, <a href="https://jobs.status.im/" target="_blank" rel="noopener noreferrer">join our team</a>, or crack some of our <a href="https://github.org/waku-org/bounties" target="_blank" rel="noopener noreferrer">bounties</a>  --- No need to remain shy!</p><hr><p><em><code>Written by Mf &amp; Hanno 09/2023</code></em></p>]]></content>
        <author>
            <name>mf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Device Pairing in Js-waku and Go-waku]]></title>
        <id>https://waku.org/device-pairing-in-js-waku-and-go-waku</id>
        <link href="https://waku.org/device-pairing-in-js-waku-and-go-waku"/>
        <updated>2023-04-24T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[Device pairing and secure message exchange using Waku and noise protocol.]]></summary>
        <content type="html"><![CDATA[<p>Device pairing and secure message exchange using Waku and noise protocol.</p><p>As the world becomes increasingly connected through the internet, the need for secure and reliable communication becomes paramount. In <a href="https://vac.dev/wakuv2-noise" target="_blank" rel="noopener noreferrer">this article</a> it is described how the Noise protocol can be used as a key-exchange mechanism for Waku.</p><p>Recently, this feature was introduced in <a href="https://github.com/waku-org/js-noise" target="_blank" rel="noopener noreferrer">js-waku</a> and <a href="https://github.com/waku-org/go-waku" target="_blank" rel="noopener noreferrer">go-waku</a>, providing a simple API for developers to implement secure communication protocols using the Noise Protocol framework. These open-source libraries provide a solid foundation for building secure and decentralized applications that prioritize data privacy and security.</p><p>This functionality is designed to be simple and easy to use, even for developers who are not experts in cryptography. The library offers a clear and concise API that abstracts away the complexity of the Noise Protocol framework and provides an straightforward interface for developers to use. Using this, developers can effortlessly implement secure communication protocols on top of their JavaScript and Go applications, without having to worry about the low-level details of cryptography.</p><p>One of the key benefits of using Noise is that it provides end-to-end encryption, which means that the communication between two parties is encrypted from start to finish. This is essential for ensuring the security and privacy of sensitive information</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="device-pairing">Device Pairing<a href="#device-pairing" class="hash-link" aria-label="Direct link to Device Pairing" title="Direct link to Device Pairing">​</a></h3><p>In today's digital world, device pairing has become an integral part of our lives. Whether it's connecting our smartphones with other computers or web applications, the need for secure device pairing has become more crucial than ever. With the increasing threat of cyber-attacks and data breaches, it's essential to implement secure protocols for device pairing to ensure data privacy and prevent unauthorized access.</p><p>To demonstrate how device pairing can be achieved using Waku and Noise, we have examples available at <a href="https://examples.waku.org/noise-js/" target="_blank" rel="noopener noreferrer">https://examples.waku.org/noise-js/</a>. You can try pairing different devices, such as mobile and desktop, via a web application. This can be done by scanning a QR code or opening a URL that contains the necessary data for a secure handshake.</p><p>The process works as follows:</p><p>Actors:</p><ul><li>Alice the initiator</li><li>Bob the responder</li></ul><ol><li>The first step in achieving secure device pairing using Noise and Waku is for Bob generate the pairing information which could be transmitted out-of-band. For this, Bob opens <a href="https://examples.waku.org/noise-js/" target="_blank" rel="noopener noreferrer">https://examples.waku.org/noise-js/</a> and a QR code is generated, containing the data required to do the handshake. This pairing QR code is timeboxed, meaning that after 2 minutes, it will become invalid and a new QR code must be generated</li><li>Alice scans the QR code using a mobile phone. This will open the app with the QR code parameters initiating the handshake process which is described in <a href="https://rfc.vac.dev/spec/43/#protocol-flow" target="_blank" rel="noopener noreferrer">43/WAKU2-DEVICE-PAIRING</a>. These messages are exchanged between two devices over Waku to establish a secure connection. The handshake messages consist of three main parts: the initiator's message, the responder's message, and the final message, which are exchanged to establish a secure connection. While using js-noise, the developer is abstracted of this process, since the messaging happens automatically depending on the actions performed by the actors in the pairing process.</li><li>Both Alice and Bob will be asked to verify each other's identity. This is done by confirming if an 8-digits authorization code match in both devices. If both actors confirm that the authorization code is valid, the handshake concludes succesfully</li><li>Alice and Bob receive a set of shared keys that can be used to start exchanging encrypted messages. The shared secret keys generated during the handshake process are used to encrypt and decrypt messages sent between the devices. This ensures that the messages exchanged between the devices are secure and cannot be intercepted or modified by an attacker.</li></ol><p>The above example demonstrates device pairing using js-waku. Additionally, You can also try building and experimenting with other noise implementations like nwaku, or go-waku, with an example available at <a href="https://github.com/waku-org/go-waku/tree/master/examples/noise" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/go-waku/tree/master/examples/noise</a> in which the same flow described before is done with Bob (the receiver) using go-waku instead of js-waku.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h3><p>With its easy to use API built on top of the Noise Protocol framework and the LibP2P networking stack, if you are a developer looking to implement secure messaging in their applications that are both decentralized and censorship resistant, Waku is definitely an excellent choice worth checking out!</p><p>Waku is also Open source with a MIT and APACHEv2 licenses, which means that developers are encouraged to contribute code, report bugs, and suggest improvements to make it even better.</p><p>Don't hesitate to try the live example at <a href="https://examples.waku.org/noise-js" target="_blank" rel="noopener noreferrer">https://examples.waku.org/noise-js</a> and build your own webapp using <a href="https://github.com/waku-org/js-noise" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/js-noise</a>, <a href="https://github.com/waku-org/js-waku" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/js-waku</a> and <a href="https://github.com/waku-org/go-waku" target="_blank" rel="noopener noreferrer">https://github.com/waku-org/go-waku</a>. This will give you a hands-on experience of implementing secure communication protocols using the Noise Protocol framework in a practical setting. Happy coding!</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="references">References<a href="#references" class="hash-link" aria-label="Direct link to References" title="Direct link to References">​</a></h3><ul><li><a href="https://vac.dev/wakuv2-noise" target="_blank" rel="noopener noreferrer">Noise handshakes as key-exchange mechanism for Waku</a></li><li><a href="https://rfc.vac.dev/spec/35/" target="_blank" rel="noopener noreferrer">Noise Protocols for Waku Payload Encryption</a></li><li><a href="https://rfc.vac.dev/spec/37/" target="_blank" rel="noopener noreferrer">Session Management for Waku Noise</a></li><li><a href="https://rfc.vac.dev/spec/43/" target="_blank" rel="noopener noreferrer">Device pairing and secure transfers with Noise</a></li><li><a href="https://github.com/waku-org/go-waku/tree/master/examples/noise" target="_blank" rel="noopener noreferrer">go-waku Noise's example</a></li><li><a href="https://github.com/waku-org/js-waku-examples/tree/master/examples/noise-js" target="_blank" rel="noopener noreferrer">js-waku Noise's example</a></li><li><a href="https://github.com/waku-org/js-noise/" target="_blank" rel="noopener noreferrer">js-noise</a></li><li><a href="https://github.com/waku-org/js-noise/" target="_blank" rel="noopener noreferrer">go-noise</a></li></ul>]]></content>
        <author>
            <name>Richard</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Future of Waku Network: Scaling, Incentivization, and Heterogeneity]]></title>
        <id>https://waku.org/future-of-waku-network</id>
        <link href="https://waku.org/future-of-waku-network"/>
        <updated>2023-04-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Learn how the Waku Network is evolving through scaling, incentivization, and diverse ecosystem development and what the future might look like.]]></summary>
        <content type="html"><![CDATA[<p>Learn how the Waku Network is evolving through scaling, incentivization, and diverse ecosystem development and what the future might look like.</p><p>Waku is preparing for production with a focus on the Status Communities use case. In this blog post, we will provide an
overview of recent discussions and research outputs, aiming to give you a better understanding of how the Waku network
may look like in terms of scaling and incentivization.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dos-mitigation-for-status-communities">DOS Mitigation for Status Communities<a href="#dos-mitigation-for-status-communities" class="hash-link" aria-label="Direct link to DOS Mitigation for Status Communities" title="Direct link to DOS Mitigation for Status Communities">​</a></h2><p>Waku is actively exploring DOS mitigation mechanisms suitable for Status Communities. While RLN
(Rate Limiting Nullifiers) remains the go-to DOS protection solution due to its privacy-preserving and
censorship-resistant properties, there is still more work to be done. We are excited to collaborate with PSE
(Privacy &amp; Scaling Explorations) in this endeavor. Learn more about their latest progress in this <a href="https://twitter.com/CPerezz19/status/1640373940634939394?s=20" target="_blank" rel="noopener noreferrer">tweet</a>.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="a-heterogeneous-waku-network">A Heterogeneous Waku Network<a href="#a-heterogeneous-waku-network" class="hash-link" aria-label="Direct link to A Heterogeneous Waku Network" title="Direct link to A Heterogeneous Waku Network">​</a></h2><p>As we noted in a previous <a href="https://forum.vac.dev/t/waku-payment-models/166/3" target="_blank" rel="noopener noreferrer">forum post</a>, Waku's protocol
incentivization model needs to be flexible to accommodate various business models. Flexibility ensures that projects
can choose how they want to use Waku based on their specific needs.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="reversing-the-incentivization-question">Reversing the Incentivization Question<a href="#reversing-the-incentivization-question" class="hash-link" aria-label="Direct link to Reversing the Incentivization Question" title="Direct link to Reversing the Incentivization Question">​</a></h3><p>Traditionally, the question of incentivization revolves around how to incentivize operators to run nodes. We'd like to
reframe the question and instead ask, "How do we pay for the infrastructure?"</p><p>Waku does not intend to offer a free lunch.
Ethereum's infrastructure is supported by transaction fees and inflation, with validators receiving rewards from both sources.
However, this model does not suit a communication network like Waku.
Users and platforms would not want to pay for every single message they send. Additionally, Waku aims to support instant
ephemeral messages that do not require consensus or long-term storage.</p><p>Projects that use Waku to enable user interactions, whether for chat messages, gaming, private DeFi, notifications, or
inter-wallet communication, may have different value extraction models. Some users might provide services for the
project and expect to receive value by running nodes, while others may pay for the product or run infrastructure to
contribute back. Waku aims to support each of these use cases, which means there will be various ways to "pay for the
infrastructure."</p><p>In <a href="https://vac.dev/building-privacy-protecting-infrastructure" target="_blank" rel="noopener noreferrer">his talk</a>, Oskar addressed two strategies: RLN and service credentials.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rln-and-service-credentials">RLN and Service Credentials<a href="#rln-and-service-credentials" class="hash-link" aria-label="Direct link to RLN and Service Credentials" title="Direct link to RLN and Service Credentials">​</a></h3><p>RLN enables DOS protection across the network in a privacy-preserving and permission-less manner: stake in a contract,
and you can send messages.</p><p>Service credentials establish a customer-provider relationship. Users might pay to have messages they are interested in
stored and served by a provider. Alternatively, a community owner could pay a service provider to host their community.</p><p>Providers could offer trial or limited free services to Waku users, similar to Slack or Discord. Once a trial is expired or outgrown,
a community owner could pay for more storage or bandwidth, similar to Slack's model.
Alternatively, individual users could contribute financially, akin to Discord's Server Boost, or by sharing their own
resources with their community.</p><p>We anticipate witnessing various scenarios across the spectrum: from users sharing resources to users paying for access to the network and everything in between.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="waku-network-ethereum-or-cosmos">Waku Network: Ethereum or Cosmos?<a href="#waku-network-ethereum-or-cosmos" class="hash-link" aria-label="Direct link to Waku Network: Ethereum or Cosmos?" title="Direct link to Waku Network: Ethereum or Cosmos?">​</a></h2><p>Another perspective is to consider whether the Waku network will resemble Ethereum or Cosmos.</p><p>For those not familiar with the difference between both, in a very concise manner:</p><ul><li>Ethereum is a set of protocols and software that are designed to operate on one common network and infrastructure</li><li>Cosmos is a set of protocols and software (SDKs) designed to be deployed in separate yet interoperable networks and infrastructures by third parties</li></ul><p>We want Waku to be decentralized to provide censorship resistance and privacy-preserving communication.
If each application has to deploy its own network, we will not achieve this goal.
Therefore, we aim Waku to be not only an open source set of protocols, but also a shared infrastructure that anyone can leverage to build applications on top, with some guarantees in terms of decentralization and anonymity.
This approach is closer in spirit to Ethereum than Cosmos.
Do note that, similarly to Ethereum, anyone is free to take Waku software and protocols and deploy their own network.</p><p>Yet, because of the difference in the fee model, the Waku Network is unlikely to be as unified as Ethereum's.
We currently assume that there will be separate gossipsub networks with different funding models.
Since there is no consensus on Waku, each individual operator can decide which network to support, enabling Waku to maintain its permission-less property.</p><p>Most likely, the Waku network will be heterogeneous, and node operators will choose the incentivization model they prefer.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="scalability-and-discovery-protocols">Scalability and Discovery Protocols<a href="#scalability-and-discovery-protocols" class="hash-link" aria-label="Direct link to Scalability and Discovery Protocols" title="Direct link to Scalability and Discovery Protocols">​</a></h2><p>To enable scalability, the flow of messages in the Waku network will be divided in shards,
so that not every node has to forward every message of the whole network.
Discovery protocols will facilitate users connecting to the right nodes to receive the messages they are interested in.</p><p>Different shards could be subject to a variety of rate limiting techniques (globally, targeted to that shard or something in-between).</p><p>Marketplace protocols may also be developed to help operators understand how they can best support the network and where
their resources are most needed. However, we are still far from establishing or even assert that such a marketplace will be needed.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="open-problems">Open Problems<a href="#open-problems" class="hash-link" aria-label="Direct link to Open Problems" title="Direct link to Open Problems">​</a></h2><p>Splitting traffic between shards reduces bandwidth consumption for every Waku Relay node.
This improvement increases the likelihood that users with home connections can participate and contribute to the gossipsub network without encountering issues.</p><p>However, it does not cap traffic.
There are still open problems regarding how to guarantee that someone can use Waku with lower Internet bandwidth or run critical services, such as a validation node, on the same connection.</p><p>We have several ongoing initiatives:</p><ul><li>Analyzing the Status Community protocol to confirm efficient usage of Waku <a href="https://github.com/vacp2p/research/issues/177" target="_blank" rel="noopener noreferrer">[4]</a></li><li>Simulating the Waku Network to measure actual bandwidth usage <a href="https://github.com/waku-org/pm/issues/2" target="_blank" rel="noopener noreferrer">[5]</a></li><li>Segregating chat messages from control and media messages <a href="https://rfc.vac.dev/spec/57/#control-message-shards" target="_blank" rel="noopener noreferrer">[6]</a></li></ul><p>The final solution will likely be a combination of protocols that reduce bandwidth usage or mitigate the risk of DOS attacks, providing flexibility for users and platforms to enable the best experience.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-evolving-waku-network">The Evolving Waku Network<a href="#the-evolving-waku-network" class="hash-link" aria-label="Direct link to The Evolving Waku Network" title="Direct link to The Evolving Waku Network">​</a></h2><p>The definition of the "Waku Network" will likely change over time. In the near future, it will transition from a single
gossipsub network to a sharded set of networks unified by a common discovery layer. This change will promote scalability
and allow various payment models to coexist within the Waku ecosystem.</p><p>In conclusion, the future of Waku Network entails growth, incentivization, and heterogeneity while steadfastly
maintaining its core principles. As Waku continues to evolve, we expect it to accommodate a diverse range of use cases
and business models, all while preserving privacy, resisting censorship, avoiding surveillance, and remaining accessible
to devices with limited resources.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="references">References<a href="#references" class="hash-link" aria-label="Direct link to References" title="Direct link to References">​</a></h2><ol><li><a href="https://rfc.vac.dev/spec/51/" target="_blank" rel="noopener noreferrer">51/WAKU2-RELAY-SHARDING</a></li><li><a href="https://rfc.vac.dev/spec/57/" target="_blank" rel="noopener noreferrer">57/STATUS-Simple-Scaling</a></li><li><a href="https://rfc.vac.dev/spec/58/" target="_blank" rel="noopener noreferrer">58/RLN-V2</a></li><li><a href="https://github.com/vacp2p/research/issues/177" target="_blank" rel="noopener noreferrer">Scaling Status Communities: Potential Problems</a></li><li><a href="https://github.com/waku-org/pm/issues/2" target="_blank" rel="noopener noreferrer">Waku Network Testing</a></li><li><a href="https://rfc.vac.dev/spec/57/#control-message-shards" target="_blank" rel="noopener noreferrer">51/WAKU2-RELAY-SHARDING: Control Message Shards</a></li></ol>]]></content>
        <author>
            <name>Franck</name>
        </author>
    </entry>
</feed>